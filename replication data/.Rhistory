IGscores_Health <- filter(IGscore_groups_catname, Sector == "Health" & congress==114) %>% dplyr::select(orgname,MLscore, Catname) %>% unique()
si_dens <- ggplot(IGscores_singleissue, aes(x=MLscore, y=..scaled..)) +geom_density(fill="#E3BA22") +facet_wrap(~Catname) +theme_classic() +ylab("Scaled Density") +ggtitle("Distributions of 114th Cong MLscores for single issue groups by type")
#ggsave("si_dens.pdf", si_dens, device="pdf")
other_dens <- ggplot(IGscores_Other, aes(x=MLscore, y=..scaled..)) +geom_density(fill="#E3BA22") +facet_wrap(~Catname) +theme_classic() +ylab("Scaled Density") +ggtitle("Distributions of 114th Cong MLscores for other groups by type")
#ggsave("other_dens.pdf", other_dens, device="pdf")
labor_dens <- ggplot(IGscores_Labor, aes(x=MLscore, y=..scaled..)) +geom_density(fill="#E3BA22") +facet_wrap(~Catname) +theme_classic() +ylab("Scaled Density") +ggtitle("Distributions of 114th Cong MLscores for labor groups by type")
#ggsave("labor_dens.pdf", labor_dens, device="pdf")
health_dens <- ggplot(IGscores_Health, aes(x=MLscore, y=..scaled..)) +geom_density(fill="#E3BA22") +facet_wrap(~Catname) +theme_classic() +ylab("Scaled Density") +ggtitle("Distributions of 114th Cong MLscores for health groups by type")
#ggsave("health_dens.pdf", health_dens, device="pdf")
business_test <- filter(IGscore_groups, orgname ==  "National Federation of Independent Business" |orgname ==  "U.S. Chamber of Commerce") %>% dplyr::select(congress, orgname, MLscore) %>% unique()
gun_test <- filter(IGscore_groups, orgname ==  "National Rifle Association" |orgname ==  "Gun Owners of America") %>% dplyr::select(congress, orgname, MLscore) %>% unique()
doctors_test <- filter(IGscore_groups, orgname ==  "American College of Physicians" |orgname ==  "Association of American Physicians and Surgeons") %>% dplyr::select(congress, orgname, MLscore) %>% unique()
lawyers_test <- filter(IGscore_groups, orgname ==  "National Lawyers Guild" |orgname ==  "National District Attorneys Association") %>% dplyr::select(congress, orgname, MLscore) %>% unique()
enviro_test <- filter(IGscore_groups, orgname ==  "Greenpeace" |orgname ==  "Natural Resources Defense Council") %>% dplyr::select(congress, orgname, MLscore) %>% unique()
labor_test <- filter(IGscore_groups, orgname ==  "International Brotherhood of Teamsters" |orgname ==  "American Federation of State, County and Municipal Employees") %>% dplyr::select(congress, orgname, MLscore) %>% unique()
business_test$type <- "Business Association"
gun_test$type <- "Gun Rights"
doctors_test$type <- "Medical Association"
lawyers_test$type <- "Lawyers Association"
enviro_test$type <- "Environmental Organization"
labor_test$type <- "Labor Union"
left_predicts <-c("Greenpeace", "National Lawyers Guild", "American College of Physicians", "National Rifle Association", "U.S. Chamber of Commerce", "American Federation of State, County and Municipal Employees")
test_orgs <- bind_rows(business_test, gun_test, doctors_test, lawyers_test, enviro_test, labor_test)
test_orgs$predict_left <- 0
test_orgs$predict_left[test_orgs$orgname %in% left_predicts] <- 1
testorg_plot <- ggplot(test_orgs, aes(x=congress, y=MLscore, group=orgname, color=as.factor(predict_left))) +geom_point() +geom_line() +theme_classic() +facet_wrap(~type) + scale_color_manual(values = c("#137B80", "#8E6C8A")) + theme(legend.position="none") +xlab("Congress") + ggtitle("Comparisons of dplyr::select within sector groups")
#ggsave("testorg_plot.pdf", testorg_plot, device="pdf")
ggsave("testorg_plot.pdf", testorg_plot, device="pdf")
ggsave("testorg_plot.pdf", testorg_plot, device="pdf")
test_orgs
unique(test_orgs$orgname)
xtable(unique(test_orgs$orgname))
library(xtable)
xtable(unique(test_orgs$orgname))
xtable(table(test_orgs$orgname))
##
## Update by Zander 10.15.2017
#assigning conyers and PP (liberal) as 1 and 2 row index, Sensenbrenner and NRA as 3 and 4 row index (conservative)
#the final output of this file is a list of matrices for the years in the dataset, each matrix is a multinomial matrix
#Three matrices are column bound together in the order of "support", "oppose", "abstain". They are all binary (plus NAs).
#The data to run this is contained in a zipped file that I have also shared. You need to adjust the filepaths.
rm(list=ls())
library(readr)
library(dplyr)
library(lubridate)
setwd("/Users/alexanderfurnas/Projects/Maplight_ideal_points/")
#read in all of the bill positions, cbp, votes etc.
pos114 <- read_csv("114positions.csv")
pos114 <- pos114 %>% select(-X1)
pos_all <- read_csv("all_positions.csv")
#read in roll call votes
rollcalls <- read_csv("Bill_Data/HSall_rollcalls.csv")
votes <- read_csv("Bill_Data/HSall_votes.csv")
#read in the congressional bill project to get topic codes
cbp <- read_csv("bills93-114 2.csv")
pos_all <- bind_rows(pos_all, pos114)
dim(pos_all)
unique(cbp$BillType)
unique(pos_all$prefix)
#standardize bill types in CBP to match Maplight ids
pos_all$prefix[pos_all$prefix == "S"] <- "s"
pos_all$prefix[pos_all$prefix == "H"] <- "hr"
pos_all$prefix[pos_all$prefix == "HR"] <- "hres"
pos_all$prefix[pos_all$prefix == "HC"] <- "hconres"
pos_all$prefix[pos_all$prefix == "SR"] <- "sres"
pos_all$prefix[pos_all$prefix == "SJ"] <- "sjres"
pos_all$prefix[pos_all$prefix == "HJ"] <- "hjres"
pos_all$prefix[pos_all$prefix == "SC"] <- "sconres"
cbp_select <- cbp %>% select(BillID, BillNum, BillType, Chamber, Cong, IntrDate, Major)
pos_all <- pos_all %>% left_join(cbp_select, c("number" = "BillNum", "prefix" = "BillType", "session" = "Cong"))
sessions <- pos_all %>% select(BillID, session) %>% unique()
#Create the edge matrix so that we can k-core (5) filter the bills
edge_mat <- NA
edge_mat <- pos_all %>% dplyr::select(orgname,BillID)
edge_mat <- edge_mat%>% filter(complete.cases(edge_mat))
edge_mat <- as.matrix(edge_mat)
#kcore filtration
library(igraph)
est_g <- graph_from_edgelist(edge_mat, directed = FALSE)
core <- coreness(est_g)
V(est_g)$core <- coreness(est_g)
core5 <- induced_subgraph(est_g,V(est_g)$core>4)
#extract ids of the bills and orgs to keep
core_names <- V(core5)$name
#filter bills and orgs to the 5 core
pos_all_core <- filter(pos_all, BillID %in% core_names & orgname %in% core_names)
#summarise bills and orgs after the filtration
(org_poscounts_post <- pos_all_core %>% group_by(orgname) %>% summarise(num = n()) %>% arrange(desc(num)))
(bill_orgcounts_post <- pos_all_core %>% group_by(BillID) %>% summarise(num = n()) %>% arrange(desc(num)))
#find how many bills of a given major topic code organizations took positions on
bill_catcounts <- pos_all %>% group_by(orgname, Major) %>% summarise(bill_count = n()) %>% arrange(desc(bill_count))
#filter to only include orgs with more than one position on a bill
bill_catcounts <- bill_catcounts %>% filter(bill_count > 1, !is.na(Major))
#get all posible bill org dyads
pos_all_core_dat <- expand.grid(BillID=unique(pos_all_core$BillID), orgname = unique(pos_all_core$orgname))
#add the dispositions in from the 5-core set, to the list of all possible ones
pos_all_core_dat <- pos_all_core_dat %>% left_join(select(pos_all_core, BillID, orgname, disposition))
pos_all_core_dat <- pos_all_core_dat %>% left_join(unique(select(pos_all_core, BillID, Major)))
#merge in the catcounts on for dyads where the org took more than one position on the major category
pos_all_core_dat <- pos_all_core_dat %>% left_join(bill_catcounts)
library(tibble)
pos_all_core_dat <- as_tibble(pos_all_core_dat)
#assign absention to all dyads where there is not a currently recorded position of yes or no, but there is a bill count indicator
pos_all_core_dat$disposition[is.na(pos_all_core_dat$disposition) & !is.na(pos_all_core_dat$bill_count)] <- "abstention"
#filter out all remaining, true NAs to get the edgelist
pos_all_core_abst <- filter(pos_all_core_dat, !is.na(disposition))
pos_all_core_abst
#pull out anchoring units for identification
pos_all_core_abst <- filter(pos_all_core_abst, orgname != "Planned Parenthood" | orgname != "National Rifle Association")
#filter out earlier congresses
rollcalls <- filter(rollcalls, congress > 108)
votes <- filter(votes, congress > 108)
#create bill id that matches cbp and maplight
rollcalls$bill_type <- gsub("[0-9]", "", rollcalls$bill_number)
rollcalls$bill_num <- gsub("[^0-9]", "", rollcalls$bill_number)
rollcalls$BillID <- paste(rollcalls$congress, rollcalls$bill_type, rollcalls$bill_num, sep ="-")
rollcalls <- dplyr::select(rollcalls, congress, chamber, rollnumber, BillID)
votes <- votes %>% left_join(rollcalls)
#follow previous procedure for assigning votes and assigning abstentions
votes <- votes %>% select(BillID, icpsr, cast_code, congress)
votes <-  filter(votes, BillID %in% core_names)
votes$disposition[votes$cast_code == 1] <- "support"
votes$disposition[votes$cast_code == 6] <- "oppose"
votes$disposition[votes$cast_code == 7 | votes$cast_code == 9] <- "abstention"
# bill_major <- pos_all %>% dplyr::select(BillID, Major) %>% unique()
# votes <- votes %>% left_join(bill_major)
#
# MOC_catcounts <- votes %>% group_by(icpsr, Major) %>% summarise(bill_count = n()) %>% arrange(desc(bill_count))
# MOC_catcounts <- MOC_catcounts %>% filter(bill_count > 1, !is.na(Major))
#
#
# votes <- votes %>% left_join(MOC_catcounts)
# votes_abst <- filter(votes, !is.na(bill_count))
#bind the two together
votes <- votes %>% select(-cast_code) %>% rename(orgname=icpsr)
votes$orgname <- as.character(votes$orgname)
final_positions_edgelist <- bind_rows(pos_all_core_abst,votes)
#make the final vote variable
final_positions_edgelist$vote <- NA
final_positions_edgelist$vote[final_positions_edgelist$disposition == "support"] <- 1
final_positions_edgelist$vote[final_positions_edgelist$disposition == "oppose"] <- -1
final_positions_edgelist$vote[final_positions_edgelist$disposition == "abstention"] <- 0
#find bills that don't have unanimous position taking on them
unanimous_bills <- final_positions_edgelist %>% group_by(BillID) %>% summarise(num_positions = length(disposition), sum_positions = sum(vote))
unanimous_bills <- filter(unanimous_bills, num_positions == abs(sum_positions))
#keep only non-unaninimous bills
final_positions_edgelist <- final_positions_edgelist %>% filter(!(BillID %in% unanimous_bills$BillID))
anchor_orgs <- c("10713" ,"14657","Planned Parenthood","National Rifle Association")
anchors <- filter(final_positions_edgelist, orgname %in% anchor_orgs)
final_positions_edgelist <- filter(final_positions_edgelist, !(orgname %in% anchor_orgs))
final_positions_edgelist  <- final_positions_edgelist  %>% mutate(org_index = as.numeric(as.factor(as.character(orgname))) +4)
#Give the right indices to the anchor sheet
anchors <- left_join(anchors, unique(select(final_positions_edgelist, BillID, bill_id_index)))
anchors$org_index <- NA
#assigning conyers and PP (liberal) as 1 and 2 row index, Sensenbrenner and NRA as 3 and 4 row index (conservative)
anchors$org_index[anchors$orgname == "10713" ] <- 1
anchors$org_index[anchors$orgname == "Planned Parenthood"] <- 2
anchors$org_index[anchors$orgname == "14657"] <- 3
anchors$org_index[anchors$orgname == "National Rifle Association"] <- 4
#add the anchors back in with their indices
final_positions_edgelist <- bind_rows(final_positions_edgelist, anchors)
final_positions_edgelist <- final_positions_edgelist %>% left_join(sessions)
session_edgelists <- split(final_positions_edgelist, as.factor(final_positions_edgelist$session))
org_nums <- max(final_positions_edgelist$org_index)
estimation_matrices <- vector("list", length = length(session_edgelists))
for (i in (1:length(session_edgelists))){
edgelist <- session_edgelists[[i]]
#make the voting matrix for estimation
edgelist  <- edgelist  %>% mutate(bill_id_index = as.numeric(as.factor(as.character(BillID))))
est_mat <- NA
est_mat <- edgelist %>% dplyr::select(org_index,bill_id_index, vote)
est_mat <- est_mat%>% filter(complete.cases(est_mat))
est_mat <- as.matrix(est_mat)
m1 <- matrix(NA, nrow = org_nums, ncol = length(unique(edgelist$bill_id_index)))
m1[est_mat[,1:2] ]<- as.numeric(est_mat[,3])
print(dim(m1))
sup_mat <- m1 == 1
sup_mat <- sup_mat*1
opp_mat <- m1 == -1
opp_mat <- opp_mat*1
abs_mat <- m1 == 0
abs_mat <- abs_mat*1
multinomial_mat <- cbind(sup_mat, opp_mat, abs_mat)
estimation_matrices[[i]] <- multinomial_mat
}
rm(list=ls())
library(readr)
library(dplyr)
library(lubridate)
setwd("/Users/alexanderfurnas/Projects/Maplight_ideal_points/")
pos114 <- read_csv("114positions.csv")
setwd("/Users/alexanderfurnas/Projects/Maplight_ideal_points/replication_data")
setwd("/Users/alexanderfurnas/Projects/Maplight_ideal_points/replication data")
pos114 <- read_csv("114positions.csv")
pos114 <- pos114 %>% select(-X1)
pos_all <- read_csv("all_positions.csv")
rollcalls <- read_csv("Bill_Data/HSall_rollcalls.csv")
votes <- read_csv("Bill_Data/HSall_votes.csv")
cbp <- read_csv("bills93-114 2.csv")
pos_all <- bind_rows(pos_all, pos114)
dim(pos_all)
unique(cbp$BillType)
unique(pos_all$prefix)
pos_all$prefix[pos_all$prefix == "S"] <- "s"
pos_all$prefix[pos_all$prefix == "H"] <- "hr"
pos_all$prefix[pos_all$prefix == "HR"] <- "hres"
pos_all$prefix[pos_all$prefix == "HC"] <- "hconres"
pos_all$prefix[pos_all$prefix == "SR"] <- "sres"
pos_all$prefix[pos_all$prefix == "SJ"] <- "sjres"
pos_all$prefix[pos_all$prefix == "HJ"] <- "hjres"
pos_all$prefix[pos_all$prefix == "SC"] <- "sconres"
cbp_select <- cbp %>% select(BillID, BillNum, BillType, Chamber, Cong, IntrDate, Major)
pos_all <- pos_all %>% left_join(cbp_select, c("number" = "BillNum", "prefix" = "BillType", "session" = "Cong"))
sessions <- pos_all %>% select(BillID, session) %>% unique()
edge_mat <- NA
edge_mat <- pos_all %>% dplyr::select(orgname,BillID)
edge_mat <- edge_mat%>% filter(complete.cases(edge_mat))
edge_mat <- as.matrix(edge_mat)
library(igraph)
est_g <- graph_from_edgelist(edge_mat, directed = FALSE)
core <- coreness(est_g)
V(est_g)$core <- coreness(est_g)
core5 <- induced_subgraph(est_g,V(est_g)$core>4)
core_names <- V(core5)$name
pos_all_core <- filter(pos_all, BillID %in% core_names & orgname %in% core_names)
(org_poscounts_post <- pos_all_core %>% group_by(orgname) %>% summarise(num = n()) %>% arrange(desc(num)))
(bill_orgcounts_post <- pos_all_core %>% group_by(BillID) %>% summarise(num = n()) %>% arrange(desc(num)))
bill_catcounts <- pos_all %>% group_by(orgname, Major) %>% summarise(bill_count = n()) %>% arrange(desc(bill_count))
bill_catcounts <- bill_catcounts %>% filter(bill_count > 1, !is.na(Major))
pos_all_core_dat <- expand.grid(BillID=unique(pos_all_core$BillID), orgname = unique(pos_all_core$orgname))
pos_all_core_dat <- pos_all_core_dat %>% left_join(select(pos_all_core, BillID, orgname, disposition))
pos_all_core_dat <- pos_all_core_dat %>% left_join(unique(select(pos_all_core, BillID, Major)))
pos_all_core_dat <- pos_all_core_dat %>% left_join(bill_catcounts)
library(tibble)
pos_all_core_dat <- as_tibble(pos_all_core_dat)
pos_all_core_dat$disposition[is.na(pos_all_core_dat$disposition) & !is.na(pos_all_core_dat$bill_count)] <- "abstention"
pos_all_core_abst <- filter(pos_all_core_dat, !is.na(disposition))
pos_all_core_abst
pos_all_core_abst <- filter(pos_all_core_abst, orgname != "Planned Parenthood" | orgname != "National Rifle Association")
rollcalls <- filter(rollcalls, congress > 108)
votes <- filter(votes, congress > 108)
rollcalls$bill_type <- gsub("[0-9]", "", rollcalls$bill_number)
rollcalls$bill_num <- gsub("[^0-9]", "", rollcalls$bill_number)
rollcalls <- dplyr::select(rollcalls, congress, chamber, rollnumber, BillID)
votes <- votes %>% select(BillID, icpsr, cast_code, congress)
rollcalls$BillID <- paste(rollcalls$congress, rollcalls$bill_type, rollcalls$bill_num, sep ="-")
votes$disposition[votes$cast_code == 6] <- "oppose"
votes <-  filter(votes, BillID %in% core_names)
votes$orgname <- as.character(votes$orgname)
final_positions_edgelist$vote <- NA
final_positions_edgelist$vote[final_positions_edgelist$disposition == "oppose"] <- -1
final_positions_edgelist$vote[final_positions_edgelist$disposition == "abstention"] <- 0
votes$disposition[votes$cast_code == 7 | votes$cast_code == 9] <- "abstention"
votes <- votes %>% select(-cast_code) %>% rename(orgname=icpsr)
final_positions_edgelist$vote[final_positions_edgelist$disposition == "support"] <- 1
votes$disposition[votes$cast_code == 1] <- "support"
unanimous_bills <- final_positions_edgelist %>% group_by(BillID) %>% summarise(num_positions = length(disposition), sum_positions = sum(vote))
votes <- votes %>% left_join(rollcalls)
final_positions_edgelist <- bind_rows(pos_all_core_abst,votes)
rollcalls <- filter(rollcalls, congress > 108)
rollcalls <- read_csv("HSall_rollcalls.csv")
votes <- read_csv("HSall_votes.csv")
rollcalls <- filter(rollcalls, congress > 108)
votes <- filter(votes, congress > 108)
rollcalls$bill_type <- gsub("[0-9]", "", rollcalls$bill_number)
rollcalls$bill_num <- gsub("[^0-9]", "", rollcalls$bill_number)
rollcalls$BillID <- paste(rollcalls$congress, rollcalls$bill_type, rollcalls$bill_num, sep ="-")
rollcalls <- dplyr::select(rollcalls, congress, chamber, rollnumber, BillID)
votes <- votes %>% left_join(rollcalls)
votes <- votes %>% select(BillID, icpsr, cast_code, congress)
votes <-  filter(votes, BillID %in% core_names)
votes$disposition[votes$cast_code == 1] <- "support"
votes$disposition[votes$cast_code == 6] <- "oppose"
votes$disposition[votes$cast_code == 7 | votes$cast_code == 9] <- "abstention"
votes <- votes %>% select(-cast_code) %>% rename(orgname=icpsr)
votes$orgname <- as.character(votes$orgname)
final_positions_edgelist <- bind_rows(pos_all_core_abst,votes)
final_positions_edgelist$vote <- NA
final_positions_edgelist$vote[final_positions_edgelist$disposition == "support"] <- 1
final_positions_edgelist$vote[final_positions_edgelist$disposition == "oppose"] <- -1
final_positions_edgelist$vote[final_positions_edgelist$disposition == "abstention"] <- 0
unanimous_bills <- final_positions_edgelist %>% group_by(BillID) %>% summarise(num_positions = length(disposition), sum_positions = sum(vote))
unanimous_bills <- filter(unanimous_bills, num_positions == abs(sum_positions))
final_positions_edgelist <- final_positions_edgelist %>% filter(!(BillID %in% unanimous_bills$BillID))
anchor_orgs <- c("10713" ,"14657","Planned Parenthood","National Rifle Association")
anchors <- filter(final_positions_edgelist, orgname %in% anchor_orgs)
final_positions_edgelist <- filter(final_positions_edgelist, !(orgname %in% anchor_orgs))
final_positions_edgelist  <- final_positions_edgelist  %>% mutate(org_index = as.numeric(as.factor(as.character(orgname))) +4)
anchors <- left_join(anchors, unique(select(final_positions_edgelist, BillID, bill_id_index)))
anchors$org_index <- NA
anchors$org_index[anchors$orgname == "10713" ] <- 1
anchors <- left_join(anchors, unique(dplyr::select(final_positions_edgelist, BillID, bill_id_index)))
final_positions_edgelist <- bind_rows(final_positions_edgelist, anchors)
final_positions_edgelist <- final_positions_edgelist %>% left_join(sessions)
session_edgelists <- split(final_positions_edgelist, as.factor(final_positions_edgelist$session))
org_nums <- max(final_positions_edgelist$org_index)
estimation_matrices <- vector("list", length = length(session_edgelists))
for (i in (1:length(session_edgelists))){
edgelist <- session_edgelists[[i]]
#make the voting matrix for estimation
edgelist  <- edgelist  %>% mutate(bill_id_index = as.numeric(as.factor(as.character(BillID))))
est_mat <- NA
est_mat <- edgelist %>% dplyr::select(org_index,bill_id_index, vote)
est_mat <- est_mat%>% filter(complete.cases(est_mat))
est_mat <- as.matrix(est_mat)
m1 <- matrix(NA, nrow = org_nums, ncol = length(unique(edgelist$bill_id_index)))
m1[est_mat[,1:2] ]<- as.numeric(est_mat[,3])
print(dim(m1))
sup_mat <- m1 == 1
sup_mat <- sup_mat*1
opp_mat <- m1 == -1
opp_mat <- opp_mat*1
abs_mat <- m1 == 0
abs_mat <- abs_mat*1
multinomial_mat <- cbind(sup_mat, opp_mat, abs_mat)
estimation_matrices[[i]] <- multinomial_mat
}
##
## Update by Zander 10.15.2017
#assigning conyers and PP (liberal) as 1 and 2 row index, Sensenbrenner and NRA as 3 and 4 row index (conservative)
#the final output of this file is a list of matrices for the years in the dataset, each matrix is a multinomial matrix
#Three matrices are column bound together in the order of "support", "oppose", "abstain". They are all binary (plus NAs).
#The data to run this is contained in a zipped file that I have also shared. You need to adjust the filepaths.
rm(list=ls())
library(readr)
library(dplyr)
library(lubridate)
setwd("/Users/alexanderfurnas/Projects/Maplight_ideal_points/replication data")
#read in all of the bill positions, cbp, votes etc.
pos114 <- read_csv("114positions.csv")
pos114 <- pos114 %>% select(-X1)
pos_all <- read_csv("all_positions.csv")
#read in roll call votes
rollcalls <- read_csv("HSall_rollcalls.csv")
votes <- read_csv("HSall_votes.csv")
#read in the congressional bill project to get topic codes
cbp <- read_csv("bills93-114 2.csv")
pos_all <- bind_rows(pos_all, pos114)
dim(pos_all)
unique(cbp$BillType)
unique(pos_all$prefix)
#standardize bill types in CBP to match Maplight ids
pos_all$prefix[pos_all$prefix == "S"] <- "s"
pos_all$prefix[pos_all$prefix == "H"] <- "hr"
pos_all$prefix[pos_all$prefix == "HR"] <- "hres"
pos_all$prefix[pos_all$prefix == "HC"] <- "hconres"
pos_all$prefix[pos_all$prefix == "SR"] <- "sres"
pos_all$prefix[pos_all$prefix == "SJ"] <- "sjres"
pos_all$prefix[pos_all$prefix == "HJ"] <- "hjres"
pos_all$prefix[pos_all$prefix == "SC"] <- "sconres"
cbp_select <- cbp %>% select(BillID, BillNum, BillType, Chamber, Cong, IntrDate, Major)
pos_all <- pos_all %>% left_join(cbp_select, c("number" = "BillNum", "prefix" = "BillType", "session" = "Cong"))
sessions <- pos_all %>% select(BillID, session) %>% unique()
#Create the edge matrix so that we can k-core (5) filter the bills
edge_mat <- NA
edge_mat <- pos_all %>% dplyr::select(orgname,BillID)
edge_mat <- edge_mat%>% filter(complete.cases(edge_mat))
edge_mat <- as.matrix(edge_mat)
#kcore filtration
library(igraph)
est_g <- graph_from_edgelist(edge_mat, directed = FALSE)
core <- coreness(est_g)
V(est_g)$core <- coreness(est_g)
core5 <- induced_subgraph(est_g,V(est_g)$core>4)
#extract ids of the bills and orgs to keep
core_names <- V(core5)$name
#filter bills and orgs to the 5 core
pos_all_core <- filter(pos_all, BillID %in% core_names & orgname %in% core_names)
#summarise bills and orgs after the filtration
(org_poscounts_post <- pos_all_core %>% group_by(orgname) %>% summarise(num = n()) %>% arrange(desc(num)))
(bill_orgcounts_post <- pos_all_core %>% group_by(BillID) %>% summarise(num = n()) %>% arrange(desc(num)))
#find how many bills of a given major topic code organizations took positions on
bill_catcounts <- pos_all %>% group_by(orgname, Major) %>% summarise(bill_count = n()) %>% arrange(desc(bill_count))
#filter to only include orgs with more than one position on a bill
bill_catcounts <- bill_catcounts %>% filter(bill_count > 1, !is.na(Major))
#get all posible bill org dyads
pos_all_core_dat <- expand.grid(BillID=unique(pos_all_core$BillID), orgname = unique(pos_all_core$orgname))
#add the dispositions in from the 5-core set, to the list of all possible ones
pos_all_core_dat <- pos_all_core_dat %>% left_join(select(pos_all_core, BillID, orgname, disposition))
pos_all_core_dat <- pos_all_core_dat %>% left_join(unique(select(pos_all_core, BillID, Major)))
#merge in the catcounts on for dyads where the org took more than one position on the major category
pos_all_core_dat <- pos_all_core_dat %>% left_join(bill_catcounts)
library(tibble)
pos_all_core_dat <- as_tibble(pos_all_core_dat)
#assign absention to all dyads where there is not a currently recorded position of yes or no, but there is a bill count indicator
pos_all_core_dat$disposition[is.na(pos_all_core_dat$disposition) & !is.na(pos_all_core_dat$bill_count)] <- "abstention"
#filter out all remaining, true NAs to get the edgelist
pos_all_core_abst <- filter(pos_all_core_dat, !is.na(disposition))
pos_all_core_abst
#pull out anchoring units for identification
pos_all_core_abst <- filter(pos_all_core_abst, orgname != "Planned Parenthood" | orgname != "National Rifle Association")
#filter out earlier congresses
rollcalls <- filter(rollcalls, congress > 108)
votes <- filter(votes, congress > 108)
#create bill id that matches cbp and maplight
rollcalls$bill_type <- gsub("[0-9]", "", rollcalls$bill_number)
rollcalls$bill_num <- gsub("[^0-9]", "", rollcalls$bill_number)
rollcalls$BillID <- paste(rollcalls$congress, rollcalls$bill_type, rollcalls$bill_num, sep ="-")
rollcalls <- dplyr::select(rollcalls, congress, chamber, rollnumber, BillID)
votes <- votes %>% left_join(rollcalls)
#follow previous procedure for assigning votes and assigning abstentions
votes <- votes %>% select(BillID, icpsr, cast_code, congress)
votes <-  filter(votes, BillID %in% core_names)
votes$disposition[votes$cast_code == 1] <- "support"
votes$disposition[votes$cast_code == 6] <- "oppose"
votes$disposition[votes$cast_code == 7 | votes$cast_code == 9] <- "abstention"
# bill_major <- pos_all %>% dplyr::select(BillID, Major) %>% unique()
# votes <- votes %>% left_join(bill_major)
#
# MOC_catcounts <- votes %>% group_by(icpsr, Major) %>% summarise(bill_count = n()) %>% arrange(desc(bill_count))
# MOC_catcounts <- MOC_catcounts %>% filter(bill_count > 1, !is.na(Major))
#
#
# votes <- votes %>% left_join(MOC_catcounts)
# votes_abst <- filter(votes, !is.na(bill_count))
#bind the two together
votes <- votes %>% select(-cast_code) %>% rename(orgname=icpsr)
votes$orgname <- as.character(votes$orgname)
final_positions_edgelist <- bind_rows(pos_all_core_abst,votes)
#make the final vote variable
final_positions_edgelist$vote <- NA
final_positions_edgelist$vote[final_positions_edgelist$disposition == "support"] <- 1
final_positions_edgelist$vote[final_positions_edgelist$disposition == "oppose"] <- -1
final_positions_edgelist$vote[final_positions_edgelist$disposition == "abstention"] <- 0
#find bills that don't have unanimous position taking on them
unanimous_bills <- final_positions_edgelist %>% group_by(BillID) %>% summarise(num_positions = length(disposition), sum_positions = sum(vote))
unanimous_bills <- filter(unanimous_bills, num_positions == abs(sum_positions))
#keep only non-unaninimous bills
final_positions_edgelist <- final_positions_edgelist %>% filter(!(BillID %in% unanimous_bills$BillID))
anchor_orgs <- c("10713" ,"14657","Planned Parenthood","National Rifle Association")
anchors <- filter(final_positions_edgelist, orgname %in% anchor_orgs)
final_positions_edgelist <- filter(final_positions_edgelist, !(orgname %in% anchor_orgs))
final_positions_edgelist  <- final_positions_edgelist  %>% mutate(org_index = as.numeric(as.factor(as.character(orgname))) +4)
#Give the right indices to the anchor sheet
anchors <- left_join(anchors, unique(dplyr::select(final_positions_edgelist, BillID, bill_id_index)))
anchors$org_index <- NA
#assigning conyers and PP (liberal) as 1 and 2 row index, Sensenbrenner and NRA as 3 and 4 row index (conservative)
anchors$org_index[anchors$orgname == "10713" ] <- 1
anchors$org_index[anchors$orgname == "Planned Parenthood"] <- 2
anchors$org_index[anchors$orgname == "14657"] <- 3
anchors$org_index[anchors$orgname == "National Rifle Association"] <- 4
#add the anchors back in with their indices
final_positions_edgelist <- bind_rows(final_positions_edgelist, anchors)
final_positions_edgelist <- final_positions_edgelist %>% left_join(sessions)
session_edgelists <- split(final_positions_edgelist, as.factor(final_positions_edgelist$session))
org_nums <- max(final_positions_edgelist$org_index)
estimation_matrices <- vector("list", length = length(session_edgelists))
for (i in (1:length(session_edgelists))){
edgelist <- session_edgelists[[i]]
#make the voting matrix for estimation
edgelist  <- edgelist  %>% mutate(bill_id_index = as.numeric(as.factor(as.character(BillID))))
est_mat <- NA
est_mat <- edgelist %>% dplyr::select(org_index,bill_id_index, vote)
est_mat <- est_mat%>% filter(complete.cases(est_mat))
est_mat <- as.matrix(est_mat)
m1 <- matrix(NA, nrow = org_nums, ncol = length(unique(edgelist$bill_id_index)))
m1[est_mat[,1:2] ]<- as.numeric(est_mat[,3])
print(dim(m1))
sup_mat <- m1 == 1
sup_mat <- sup_mat*1
opp_mat <- m1 == -1
opp_mat <- opp_mat*1
abs_mat <- m1 == 0
abs_mat <- abs_mat*1
multinomial_mat <- cbind(sup_mat, opp_mat, abs_mat)
estimation_matrices[[i]] <- multinomial_mat
}
estimation_matrices <- vector("list", length = length(session_edgelists))
for (i in (1:length(session_edgelists))){
edgelist <- session_edgelists[[i]]
#make the voting matrix for estimation
edgelist  <- edgelist  %>% mutate(bill_id_index = as.numeric(as.factor(as.character(BillID))))
est_mat <- NA
est_mat <- edgelist %>% dplyr::select(org_index,bill_id_index, vote)
est_mat <- est_mat%>% filter(complete.cases(est_mat))
est_mat <- as.matrix(est_mat)
m1 <- matrix(NA, nrow = org_nums, ncol = length(unique(edgelist$bill_id_index)))
m1[est_mat[,1:2] ]<- as.numeric(est_mat[,3])
sup_mat <- m1 == 1
sup_mat <- sup_mat*1
print(sum(sup_mat))
opp_mat <- m1 == -1
opp_mat <- opp_mat*1
abs_mat <- m1 == 0
abs_mat <- abs_mat*1
multinomial_mat <- cbind(sup_mat, opp_mat, abs_mat)
estimation_matrices[[i]] <- multinomial_mat
}
edgelist  <- edgelist  %>% mutate(bill_id_index = as.numeric(as.factor(as.character(BillID))))
est_mat <- NA
est_mat <- edgelist %>% dplyr::select(org_index,bill_id_index, vote)
est_mat <- est_mat%>% filter(complete.cases(est_mat))
est_mat <- as.matrix(est_mat)
m1 <- matrix(NA, nrow = org_nums, ncol = length(unique(edgelist$bill_id_index)))
m1[est_mat[,1:2] ]<- as.numeric(est_mat[,3])
m1
edgelist  <- final_positions_edgelist  %>% mutate(bill_id_index = as.numeric(as.factor(as.character(BillID))))
est_mat <- NA
est_mat <- edgelist %>% dplyr::select(org_index,bill_id_index, vote)
est_mat <- est_mat%>% filter(complete.cases(est_mat))
est_mat <- as.matrix(est_mat)
m1 <- matrix(NA, nrow = org_nums, ncol = length(unique(edgelist$bill_id_index)))
m1[est_mat[,1:2] ]<- as.numeric(est_mat[,3])
dim(m1)
sum(m1==1)
sum(m1==1, na.rm-T)
sum(m1==1, na.rm=T)
sum(m1==-1, na.rm=T)
sum(m1==-1, na.rm=0)
sum(m1==-0, na.rm=T)
dim(m1)
5176*3035
