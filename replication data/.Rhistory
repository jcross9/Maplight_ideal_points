non_anchors <- filter(pos_all_core_dat, !(orgname %in% anchor_orgs))
anchor_pos <- filter(pos_all_core_dat, orgname %in% anchor_orgs)
non_anchors$org_index <- as.numeric(as.factor(non_anchors$orgname)) + 4
non_anchors$bill_index <- as.numeric(as.factor(non_anchors$BillID))
anchor_pos$org_index[anchor_pos$orgname == "10713" ] <- 1
anchor_pos$org_index[anchor_pos$orgname == "Sierra Club"] <- 2
anchor_pos$org_index[anchor_pos$orgname == "14657"] <- 3
anchor_pos$org_index[anchor_pos$orgname == "Americans for Tax Reform"] <- 4
anchor_pos <- anchor_pos %>% left_join(select(non_anchors, BillID, bill_index)) %>% unique()
select(anchor_pos, BillID, bill_index) %>% left_join(select(non_anchors, BillID, bill_index))
sessions
final_positions_edgelist <- bind_rows(select(anchor_pos, org_index, bill_index, disposition), select(non_anchors, org_index, bill_index, disposition))
final_positions_edgelist$vote <- NA
final_positions_edgelist$vote[final_positions_edgelist$disposition == "support"] <- 1
final_positions_edgelist$vote[final_positions_edgelist$disposition == "oppose"] <- 0
final_positions_edgelist <- final_positions_edgelist %>% select(-disposition)
final_positions_edgelist
sessions
pos_all_core_dat
pos_all_core_dat
sessions <- sessions %>% left_join(pos_all_core_dat)
sessions
anchor_orgs <- c("10713" ,"14657","Sierra Club","Americans for Tax Reform")
non_anchors <- filter(pos_all_core_dat, !(orgname %in% anchor_orgs))
anchor_pos <- filter(pos_all_core_dat, orgname %in% anchor_orgs)
non_anchors$org_index <- as.numeric(as.factor(non_anchors$orgname)) + 4
non_anchors$bill_index <- as.numeric(as.factor(non_anchors$BillID))
anchor_pos$org_index[anchor_pos$orgname == "10713" ] <- 1
anchor_pos$org_index[anchor_pos$orgname == "Sierra Club"] <- 2
anchor_pos$org_index[anchor_pos$orgname == "14657"] <- 3
anchor_pos$org_index[anchor_pos$orgname == "Americans for Tax Reform"] <- 4
anchor_pos <- anchor_pos %>% left_join(select(non_anchors, BillID, bill_index)) %>% unique()
final_positions_edgelist <- bind_rows(select(anchor_pos, org_index, bill_index, disposition), select(non_anchors, org_index, bill_index, disposition))
final_positions_edgelist$vote <- NA
final_positions_edgelist$vote[final_positions_edgelist$disposition == "support"] <- 1
final_positions_edgelist$vote[final_positions_edgelist$disposition == "oppose"] <- 0
final_positions_edgelist <- final_positions_edgelist %>% select(-disposition)
final_positions_edgelist <- final_positions_edgelist %>% left_join(select(sessions))
final_positions_edgelist
sessions
pos_all_core_dat
anchor_pos
##############################################################################
######## DYNAMIC IG/MC SCORES, USING MCMCPACK() ##############################
##############################################################################
rm(list=ls())
library(readr)
library(dplyr)
library(lubridate)
library(stringr)
setwd("/Users/alexanderfurnas/Projects/Maplight_ideal_points/replication data/")
setwd("C:/Users/jcros/Documents/Maplight_ideal_points/")
setwd("/home/jessemc/Maplight_ideal_points")
#read in all of the bill positions, cbp, votes etc.
pos_all <- read_csv("all_positions_including114-csv.csv")
#read in roll call votes
rollcalls <- read_csv("HSall_rollcalls.csv")
votes <- read_csv("HSall_votes.csv")
#read in the congressional bill project to get topic codes
cbp <- read_csv("bills93-114 2.csv")
dim(pos_all)
unique(cbp$BillType)
unique(pos_all$prefix)
#standardize bill types in CBP to match Maplight ids
pos_all$prefix[pos_all$prefix == "S"] <- "s"
pos_all$prefix[pos_all$prefix == "H"] <- "hr"
pos_all$prefix[pos_all$prefix == "HR"] <- "hres"
pos_all$prefix[pos_all$prefix == "HC"] <- "hconres"
pos_all$prefix[pos_all$prefix == "SR"] <- "sres"
pos_all$prefix[pos_all$prefix == "SJ"] <- "sjres"
pos_all$prefix[pos_all$prefix == "HJ"] <- "hjres"
pos_all$prefix[pos_all$prefix == "SC"] <- "sconres"
cbp_select <- cbp %>% select(BillID, BillNum, BillType, Chamber, Cong, IntrDate, Major)
pos_all <- pos_all %>% left_join(cbp_select, c("number" = "BillNum", "prefix" = "BillType", "session" = "Cong"))
sessions <- pos_all %>% select(BillID, session) %>% unique()
pos_all_edges <- pos_all %>% select(orgname, BillID, disposition)
pos_all_edges <- pos_all_edges %>% filter(complete.cases(pos_all_edges))
rollcalls <- filter(rollcalls, congress > 108 & (grepl("passage", vote_desc) | grepl("Passage", vote_question)))
votes <- filter(votes, congress > 108)
votes$disposition <- NA
votes$disposition[votes$cast_code == 1] <- "support"
votes$disposition[votes$cast_code == 6] <- "oppose"
votes <- votes %>% filter(!is.na(disposition))
rollcalls$bill_type <- gsub("[0-9]", "", rollcalls$bill_number)
rollcalls$bill_num <- gsub("[^0-9]", "", rollcalls$bill_number)
rollcalls$BillID <- paste(rollcalls$congress, rollcalls$bill_type, rollcalls$bill_num, sep ="-")
rollcalls <- dplyr::select(rollcalls, congress, chamber, rollnumber, BillID, date)
last_rolls <- rollcalls %>% group_by(BillID) %>% summarise(lastrolldate = max(date))
rollcalls <- rollcalls %>% left_join(last_rolls)
rollcalls <- rollcalls %>% filter(date == lastrolldate)
rollcalls <- rollcalls %>% left_join(votes)
rollcalls_pos <- rollcalls %>% select(BillID, icpsr, disposition) %>% rename(orgname = icpsr)
rollcalls_pos$orgname <- as.character(rollcalls_pos$orgname)
combined_pos <- bind_rows(pos_all_edges, rollcalls_pos)
unanimous_votes <- combined_pos %>% group_by(BillID) %>% summarise(num_votes = n(), num_support = sum(disposition == "support"), num_oppose = sum(disposition == "oppose"))
unanimous_votes <- unanimous_votes %>% filter(num_votes == num_support | num_votes == num_oppose)
combined_pos <- combined_pos %>% filter(!(BillID %in% unanimous_votes$BillID))  %>% unique()
g_mat <- matrix(0,nrow = length(unique(combined_pos$orgname)), ncol = length(unique(combined_pos$BillID)), dimnames = list(unique(combined_pos$orgname), unique(combined_pos$BillID)))
for (i in 1:nrow(combined_pos)){
row_org <- combined_pos$orgname[i]
col_bill <- combined_pos$BillID[i]
g_mat[row_org , col_bill] <- 1
}
library(igraph)
est_g <- graph_from_incidence_matrix(g_mat)
V(est_g)$core <- coreness(est_g)
core5 <- induced_subgraph(est_g,V(est_g)$core>4)
#extract ids of the bills and orgs to keep
core_names <- V(core5)$name
pos_all_edges_core <- as_tibble(combined_pos) %>% filter(BillID %in% core_names) %>% filter(orgname %in% core_names)
pos_all_core_dat <- select(pos_all_edges_core, BillID, orgname, disposition)
anchor_orgs <- c("10713" ,"14657","Sierra Club","Americans for Tax Reform")
non_anchors <- filter(pos_all_core_dat, !(orgname %in% anchor_orgs))
anchor_pos <- filter(pos_all_core_dat, orgname %in% anchor_orgs)
non_anchors$org_index <- as.numeric(as.factor(non_anchors$orgname)) + 4
non_anchors$bill_index <- as.numeric(as.factor(non_anchors$BillID))
anchor_pos$org_index[anchor_pos$orgname == "10713" ] <- 1
anchor_pos$org_index[anchor_pos$orgname == "Sierra Club"] <- 2
anchor_pos$org_index[anchor_pos$orgname == "14657"] <- 3
anchor_pos$org_index[anchor_pos$orgname == "Americans for Tax Reform"] <- 4
anchor_pos <- anchor_pos %>% left_join(select(non_anchors, BillID, bill_index)) %>% unique()
sessions <- sessions %>% left_join(anchor_pos)
sessions
##############################################################################
######## DYNAMIC IG/MC SCORES, USING MCMCPACK() ##############################
##############################################################################
rm(list=ls())
library(readr)
library(dplyr)
library(lubridate)
library(stringr)
setwd("/Users/alexanderfurnas/Projects/Maplight_ideal_points/replication data/")
setwd("C:/Users/jcros/Documents/Maplight_ideal_points/")
setwd("/home/jessemc/Maplight_ideal_points")
#read in all of the bill positions, cbp, votes etc.
pos_all <- read_csv("all_positions_including114-csv.csv")
#read in roll call votes
rollcalls <- read_csv("HSall_rollcalls.csv")
votes <- read_csv("HSall_votes.csv")
#read in the congressional bill project to get topic codes
cbp <- read_csv("bills93-114 2.csv")
dim(pos_all)
unique(cbp$BillType)
unique(pos_all$prefix)
#standardize bill types in CBP to match Maplight ids
pos_all$prefix[pos_all$prefix == "S"] <- "s"
pos_all$prefix[pos_all$prefix == "H"] <- "hr"
pos_all$prefix[pos_all$prefix == "HR"] <- "hres"
pos_all$prefix[pos_all$prefix == "HC"] <- "hconres"
pos_all$prefix[pos_all$prefix == "SR"] <- "sres"
pos_all$prefix[pos_all$prefix == "SJ"] <- "sjres"
pos_all$prefix[pos_all$prefix == "HJ"] <- "hjres"
pos_all$prefix[pos_all$prefix == "SC"] <- "sconres"
cbp_select <- cbp %>% select(BillID, BillNum, BillType, Chamber, Cong, IntrDate, Major)
pos_all <- pos_all %>% left_join(cbp_select, c("number" = "BillNum", "prefix" = "BillType", "session" = "Cong"))
sessions <- pos_all %>% select(BillID, session) %>% unique()
pos_all_edges <- pos_all %>% select(orgname, BillID, disposition)
pos_all_edges <- pos_all_edges %>% filter(complete.cases(pos_all_edges))
rollcalls <- filter(rollcalls, congress > 108 & (grepl("passage", vote_desc) | grepl("Passage", vote_question)))
votes <- filter(votes, congress > 108)
votes$disposition <- NA
votes$disposition[votes$cast_code == 1] <- "support"
votes$disposition[votes$cast_code == 6] <- "oppose"
votes <- votes %>% filter(!is.na(disposition))
rollcalls$bill_type <- gsub("[0-9]", "", rollcalls$bill_number)
rollcalls$bill_num <- gsub("[^0-9]", "", rollcalls$bill_number)
rollcalls$BillID <- paste(rollcalls$congress, rollcalls$bill_type, rollcalls$bill_num, sep ="-")
rollcalls <- dplyr::select(rollcalls, congress, chamber, rollnumber, BillID, date)
last_rolls <- rollcalls %>% group_by(BillID) %>% summarise(lastrolldate = max(date))
rollcalls <- rollcalls %>% left_join(last_rolls)
rollcalls <- rollcalls %>% filter(date == lastrolldate)
rollcalls <- rollcalls %>% left_join(votes)
rollcalls_pos <- rollcalls %>% select(BillID, icpsr, disposition) %>% rename(orgname = icpsr)
rollcalls_pos$orgname <- as.character(rollcalls_pos$orgname)
combined_pos <- bind_rows(pos_all_edges, rollcalls_pos)
unanimous_votes <- combined_pos %>% group_by(BillID) %>% summarise(num_votes = n(), num_support = sum(disposition == "support"), num_oppose = sum(disposition == "oppose"))
unanimous_votes <- unanimous_votes %>% filter(num_votes == num_support | num_votes == num_oppose)
combined_pos <- combined_pos %>% filter(!(BillID %in% unanimous_votes$BillID))  %>% unique()
g_mat <- matrix(0,nrow = length(unique(combined_pos$orgname)), ncol = length(unique(combined_pos$BillID)), dimnames = list(unique(combined_pos$orgname), unique(combined_pos$BillID)))
for (i in 1:nrow(combined_pos)){
row_org <- combined_pos$orgname[i]
col_bill <- combined_pos$BillID[i]
g_mat[row_org , col_bill] <- 1
}
library(igraph)
est_g <- graph_from_incidence_matrix(g_mat)
V(est_g)$core <- coreness(est_g)
core5 <- induced_subgraph(est_g,V(est_g)$core>4)
#extract ids of the bills and orgs to keep
core_names <- V(core5)$name
pos_all_edges_core <- as_tibble(combined_pos) %>% filter(BillID %in% core_names) %>% filter(orgname %in% core_names)
pos_all_core_dat <- select(pos_all_edges_core, BillID, orgname, disposition)
anchor_orgs <- c("10713" ,"14657","Sierra Club","Americans for Tax Reform")
non_anchors <- filter(pos_all_core_dat, !(orgname %in% anchor_orgs))
anchor_pos <- filter(pos_all_core_dat, orgname %in% anchor_orgs)
non_anchors$org_index <- as.numeric(as.factor(non_anchors$orgname)) + 4
non_anchors$bill_index <- as.numeric(as.factor(non_anchors$BillID))
anchor_pos$org_index[anchor_pos$orgname == "10713" ] <- 1
anchor_pos$org_index[anchor_pos$orgname == "Sierra Club"] <- 2
anchor_pos$org_index[anchor_pos$orgname == "14657"] <- 3
anchor_pos$org_index[anchor_pos$orgname == "Americans for Tax Reform"] <- 4
anchor_pos <- anchor_pos %>% left_join(select(non_anchors, BillID, bill_index)) %>% unique()
sessions <- sessions %>% left_join(anchor_pos) %>% select(bill_index, session) %>% unique()
sessions
sessions <- filter(sessions, !is.na(bill_index) & !is.na(session))
sessions
final_positions_edgelist <- bind_rows(select(anchor_pos, org_index, bill_index, disposition), select(non_anchors, org_index, bill_index, disposition))
final_positions_edgelist$vote <- NA
final_positions_edgelist$vote[final_positions_edgelist$disposition == "support"] <- 1
final_positions_edgelist$vote[final_positions_edgelist$disposition == "oppose"] <- 0
final_positions_edgelist <- final_positions_edgelist %>% select(-disposition)
final_positions_edgelist <- final_positions_edgelist %>% left_join(select(sessions))
final_positions_edgelist
sessions
final_positions_edgelist <- final_positions_edgelist %>% left_join(sessions)
final_positions_edgelist
filter(final_positions_edgelist, session == 109)
filter(final_positions_edgelist, session == 109)$org_index
session_edgelists <- split(select(final_positions_edgelist, -bill_index), as.factor(final_positions_edgelist$session))
org_nums <- max(final_positions_edgelist$org_index)
estimation_matrices <- vector("list", length = length(session_edgelists))
for (i in (1:length(session_edgelists))){
edgelist <- session_edgelists[[i]]
#make the voting matrix for estimation
edgelist  <- edgelist  %>% mutate(bill_id_index = as.numeric(as.factor(as.character(BillID))))
est_mat <- NA
est_mat <- edgelist %>% dplyr::select(org_index,bill_id_index, vote)
est_mat <- est_mat%>% filter(complete.cases(est_mat))
est_mat <- as.matrix(est_mat)
m1 <- matrix(NA, nrow = org_nums, ncol = length(unique(edgelist$bill_id_index)))
m1[est_mat[,1:2] ]<- as.numeric(est_mat[,3])
print(dim(m1))
estimation_matrices[[i]] <- m1
}
session_edgelists <- split(final_positions_edgelist, as.factor(final_positions_edgelist$session))
org_nums <- max(final_positions_edgelist$org_index)
estimation_matrices <- vector("list", length = length(session_edgelists))
for (i in (1:length(session_edgelists))){
edgelist <- session_edgelists[[i]]
#make the voting matrix for estimation
edgelist  <- edgelist  %>% mutate(bill_id_index = as.numeric(as.factor(as.character(bill_index))))
est_mat <- NA
est_mat <- edgelist %>% dplyr::select(org_index,bill_id_index, vote)
est_mat <- est_mat%>% filter(complete.cases(est_mat))
est_mat <- as.matrix(est_mat)
m1 <- matrix(NA, nrow = org_nums, ncol = length(unique(edgelist$bill_id_index)))
m1[est_mat[,1:2] ]<- as.numeric(est_mat[,3])
print(dim(m1))
estimation_matrices[[i]] <- m1
}
estimation_matrices[[3]]
39 + 153 + 94 + 157 + 165 + 231
final_positions_edgelist
length(unique(final_positions_edgelist$bill_index))
session_edgelists
est_mat <- NA
est_mat <- final_positions_edgelist %>% dplyr::select(org_index,bill_index, vote)
est_mat <- est_mat%>% filter(complete.cases(est_mat))
est_mat <- as.matrix(est_mat)
m1 <- matrix(NA, nrow = length(unique(final_positions_edgelist$org_index)), ncol = length(unique(final_positions_edgelist$bill_index)))
m1[est_mat[,1:2] ]<- as.numeric(est_mat[,3])
print(dim(m1)
)
sessions
sess_109 <- filter(sessions, session == 109)$bill_index
sess_109
m109 <- m1[,sess_109 ]
dim(m109)
sess_110 <- filter(sessions, session == 110)$bill_index
m110 <- m1[,sess_110 ]
dim(m110)
summary(as.factor(sessions$session))
sum(summary(as.factor(sessions$session)))
sessions <- sessions %>% left_join(anchor_pos) %>% select(bill_index, session) %>% unique()
anchor_pos
sessions <- anchor_pos %>% mutate(session = str_split(BillID, "-")[0])
str_split(anchor_pos$BillID, "-")[0]
str_split(anchor_pos$BillID, "-")[[0]]
str_split(anchor_pos$BillID, "-")
sessions <- anchor_pos %>% seperate(BillID, c("session", "bill_type", "bill_num") , sep = "-") %>% select(-bill_type, bill_num)
library(tidyr)
sessions <- anchor_pos %>% seperate(BillID, c("session", "bill_type", "bill_num") , sep = "-") %>% select(-bill_type, bill_num)
sessions <- anchor_pos %>% separate(BillID, c("session", "bill_type", "bill_num") , sep = "-") %>% select(-bill_type, bill_num)
sessions
sessions <- anchor_pos %>% separate(BillID, c("session", "bill_type", "bill_num") , sep = "-") %>% select(session, bill_index)
sessions
sessions <- anchor_pos %>% separate(BillID, c("session", "bill_type", "bill_num") , sep = "-") %>% select(session, bill_index) %>% unique()
sessions
sessions <- anchor_pos %>% separate(BillID, c("session", "bill_type", "bill_num") , sep = "-") %>% select(session, BillID, bill_index) %>% unique()
anchor_pos
length(unique(anchor_pos$BillID))
length(unique(anchor_pos$bill_index))
final_positions_edgelist  <- bind_rows(anchor_pos, non_anchors)
sessions <- final_positions_edgelist %>% separate(BillID, c("session", "bill_type", "bill_num") , sep = "-") %>% select(session, BillID, bill_index) %>% unique()
final_positions_edgelist
sessions <- final_positions_edgelist %>% separate(BillID, c("session", "bill_type", "bill_num") , sep = "-") %>% select(session, bill_index) %>% unique()
sessions
final_positions_edgelist <- final_positions_edgelist %>% select( org_index, bill_index, disposition)
final_positions_edgelist$vote <- NA
final_positions_edgelist$vote[final_positions_edgelist$disposition == "support"] <- 1
final_positions_edgelist$vote[final_positions_edgelist$disposition == "oppose"] <- 0
final_positions_edgelist <- final_positions_edgelist %>% select(-disposition)
final_positions_edgelist <- final_positions_edgelist %>% left_join(sessions)
est_mat <- NA
est_mat <- final_positions_edgelist %>% dplyr::select(org_index,bill_index, vote)
est_mat <- est_mat%>% filter(complete.cases(est_mat))
est_mat <- as.matrix(est_mat)
m1 <- matrix(NA, nrow = length(unique(final_positions_edgelist$org_index)), ncol = length(unique(final_positions_edgelist$bill_index)))
m1[est_mat[,1:2] ]<- as.numeric(est_mat[,3])
print(dim(m1)
sess_109 <- filter(sessions, session == 109)$bill_index
m109 <- m1[,sess_109 ]
sess_110 <- filter(sessions, session == 110)$bill_index
m110 <- m1[,sess_110 ]
sess_109 <- filter(sessions, session == 109)$bill_index
m109 <- m1[,sess_109 ]
sess_109 <- filter(sessions, session == 109)$bill_index
m109 <- m1[,sess_109 ]
session_edgelists <- split(final_positions_edgelist, as.factor(final_positions_edgelist$session))
org_nums <- max(final_positions_edgelist$org_index)
estimation_matrices <- vector("list", length = length(session_edgelists))
for (i in (1:length(session_edgelists))){
edgelist <- session_edgelists[[i]]
#make the voting matrix for estimation
edgelist  <- edgelist  %>% mutate(bill_id_index = as.numeric(as.factor(as.character(bill_index))))
est_mat <- NA
est_mat <- edgelist %>% dplyr::select(org_index,bill_id_index, vote)
est_mat <- est_mat%>% filter(complete.cases(est_mat))
est_mat <- as.matrix(est_mat)
m1 <- matrix(NA, nrow = org_nums, ncol = length(unique(edgelist$bill_id_index)))
m1[est_mat[,1:2] ]<- as.numeric(est_mat[,3])
print(dim(m1))
estimation_matrices[[i]] <- m1
}
estimation_matrices[[1]]
##############################################################################
######## DYNAMIC IG/MC SCORES, USING MCMCPACK() ##############################
##############################################################################
rm(list=ls())
library(readr)
library(dplyr)
library(lubridate)
library(stringr)
setwd("/Users/alexanderfurnas/Projects/Maplight_ideal_points/replication data/")
setwd("C:/Users/jcros/Documents/Maplight_ideal_points/")
setwd("/home/jessemc/Maplight_ideal_points")
#read in all of the bill positions, cbp, votes etc.
pos_all <- read_csv("all_positions_including114-csv.csv")
#read in roll call votes
rollcalls <- read_csv("HSall_rollcalls.csv")
votes <- read_csv("HSall_votes.csv")
#read in the congressional bill project to get topic codes
cbp <- read_csv("bills93-114 2.csv")
dim(pos_all)
unique(cbp$BillType)
unique(pos_all$prefix)
#standardize bill types in CBP to match Maplight ids
pos_all$prefix[pos_all$prefix == "S"] <- "s"
pos_all$prefix[pos_all$prefix == "H"] <- "hr"
pos_all$prefix[pos_all$prefix == "HR"] <- "hres"
pos_all$prefix[pos_all$prefix == "HC"] <- "hconres"
pos_all$prefix[pos_all$prefix == "SR"] <- "sres"
pos_all$prefix[pos_all$prefix == "SJ"] <- "sjres"
pos_all$prefix[pos_all$prefix == "HJ"] <- "hjres"
pos_all$prefix[pos_all$prefix == "SC"] <- "sconres"
cbp_select <- cbp %>% select(BillID, BillNum, BillType, Chamber, Cong, IntrDate, Major)
pos_all <- pos_all %>% left_join(cbp_select, c("number" = "BillNum", "prefix" = "BillType", "session" = "Cong"))
sessions <- pos_all %>% select(BillID, session) %>% unique()
pos_all_edges <- pos_all %>% select(orgname, BillID, disposition)
pos_all_edges <- pos_all_edges %>% filter(complete.cases(pos_all_edges))
rollcalls <- filter(rollcalls, congress > 108 & (grepl("passage", vote_desc) | grepl("Passage", vote_question)))
votes <- filter(votes, congress > 108)
votes$disposition <- NA
votes$disposition[votes$cast_code == 1] <- "support"
votes$disposition[votes$cast_code == 6] <- "oppose"
votes <- votes %>% filter(!is.na(disposition))
rollcalls$bill_type <- gsub("[0-9]", "", rollcalls$bill_number)
rollcalls$bill_num <- gsub("[^0-9]", "", rollcalls$bill_number)
rollcalls$BillID <- paste(rollcalls$congress, rollcalls$bill_type, rollcalls$bill_num, sep ="-")
rollcalls <- dplyr::select(rollcalls, congress, chamber, rollnumber, BillID, date)
last_rolls <- rollcalls %>% group_by(BillID) %>% summarise(lastrolldate = max(date))
rollcalls <- rollcalls %>% left_join(last_rolls)
rollcalls <- rollcalls %>% filter(date == lastrolldate)
rollcalls <- rollcalls %>% left_join(votes)
rollcalls_pos <- rollcalls %>% select(BillID, icpsr, disposition) %>% rename(orgname = icpsr)
rollcalls_pos$orgname <- as.character(rollcalls_pos$orgname)
combined_pos <- bind_rows(pos_all_edges, rollcalls_pos)
unanimous_votes <- combined_pos %>% group_by(BillID) %>% summarise(num_votes = n(), num_support = sum(disposition == "support"), num_oppose = sum(disposition == "oppose"))
unanimous_votes <- unanimous_votes %>% filter(num_votes == num_support | num_votes == num_oppose)
combined_pos <- combined_pos %>% filter(!(BillID %in% unanimous_votes$BillID))  %>% unique()
g_mat <- matrix(0,nrow = length(unique(combined_pos$orgname)), ncol = length(unique(combined_pos$BillID)), dimnames = list(unique(combined_pos$orgname), unique(combined_pos$BillID)))
for (i in 1:nrow(combined_pos)){
row_org <- combined_pos$orgname[i]
col_bill <- combined_pos$BillID[i]
g_mat[row_org , col_bill] <- 1
}
library(igraph)
est_g <- graph_from_incidence_matrix(g_mat)
V(est_g)$core <- coreness(est_g)
core5 <- induced_subgraph(est_g,V(est_g)$core>4)
#extract ids of the bills and orgs to keep
core_names <- V(core5)$name
pos_all_edges_core <- as_tibble(combined_pos) %>% filter(BillID %in% core_names) %>% filter(orgname %in% core_names)
pos_all_core_dat <- select(pos_all_edges_core, BillID, orgname, disposition)
anchor_orgs <- c("10713" ,"14657","Sierra Club","Americans for Tax Reform")
non_anchors <- filter(pos_all_core_dat, !(orgname %in% anchor_orgs))
anchor_pos <- filter(pos_all_core_dat, orgname %in% anchor_orgs)
non_anchors$org_index <- as.numeric(as.factor(non_anchors$orgname)) + 4
non_anchors$bill_index <- as.numeric(as.factor(non_anchors$BillID))
anchor_pos$org_index[anchor_pos$orgname == "10713" ] <- 1
anchor_pos$org_index[anchor_pos$orgname == "Sierra Club"] <- 2
anchor_pos$org_index[anchor_pos$orgname == "14657"] <- 3
anchor_pos$org_index[anchor_pos$orgname == "Americans for Tax Reform"] <- 4
anchor_pos <- anchor_pos %>% left_join(select(non_anchors, BillID, bill_index)) %>% unique()
library(tidyr)
final_positions_edgelist  <- bind_rows(anchor_pos, non_anchors)
sessions <- final_positions_edgelist %>% separate(BillID, c("session", "bill_type", "bill_num") , sep = "-") %>% select(session, bill_index) %>% unique()
final_positions_edgelist <- final_positions_edgelist %>% select( org_index, bill_index, disposition)
final_positions_edgelist$vote <- NA
final_positions_edgelist$vote[final_positions_edgelist$disposition == "support"] <- 1
final_positions_edgelist$vote[final_positions_edgelist$disposition == "oppose"] <- 0
final_positions_edgelist <- final_positions_edgelist %>% select(-disposition)
final_positions_edgelist <- final_positions_edgelist %>% left_join(sessions)
est_mat <- NA
est_mat <- final_positions_edgelist %>% dplyr::select(org_index,bill_index, vote)
est_mat <- est_mat%>% filter(complete.cases(est_mat))
est_mat <- as.matrix(est_mat)
m1 <- matrix(NA, nrow = length(unique(final_positions_edgelist$org_index)), ncol = length(unique(final_positions_edgelist$bill_index)))
m1[est_mat[,1:2] ]<- as.numeric(est_mat[,3])
print(dim(m1)
)
sess_109 <- filter(sessions, session == 109)$bill_index
m109 <- m1[,sess_109 ]
m109
dim(m109)
sess_110 <- filter(sessions, session == 110)$bill_index
m110 <- m1[,sess_110 ]
dim(m110)
sess_109 <- filter(sessions, session == 109)$bill_index
m109 <- m1[,sess_109]
dim(m109)
sess_110 <- filter(sessions, session == 110)$bill_index
m110 <- m1[,sess_110]
dim(m110)
sess_111 <- filter(sessions, session == 111)$bill_index
m111 <- m1[,sess_111]
dim(m111)
sess_112 <- filter(sessions, session == 112)$bill_index
m112 <- m1[,sess_112]
dim(m112)
sess_113 <- filter(sessions, session == 113)$bill_index
m113 <- m1[,sess_113]
dim(m113)
sess_114 <- filter(sessions, session == 114)$bill_index
m114 <- m1[,sess_114 ]
dim(m114)
m114
View(m114)
View(m112)
View(m1)
rowSums(is.na(m1))
na_sums <- rowSums(is.na(m1))
num_cols <- ncol(m1)
missing <- cbind(na_sums, num_cols)
missing
missing <- as_tibble(cbind(na_sums, num_cols)) %>% mutate(filled = num_cols - na_sums)
missing
min(missing$filled)
dim(m113)
dim(m114)
ggplot(nominate, aes(x=dim1, y=scores, color = as.factor(party_code))) + geom_point() + facet_wrap(~congress) + theme_classic()
est_g <- graph_from_incidence_matrix(m114)
est_g
V(est_g)$core <- coreness(est_g)
core5 <- induced_subgraph(est_g,V(est_g)$core>4)
core5
V(est_g)$core
min(V(est_g)$core)
m114
sum(m114)
sum(m114, na.rm=T)
est_g <- graph_from_incidence_matrix(m114)
est_g
dim(m114)
3455*492
m114[m114 == 0] <- -1
m114[is.na(m114)] <- 0
est_g <- graph_from_incidence_matrix(m114)
est_g
V(est_g)$core <- coreness(est_g)
core5 <- induced_subgraph(est_g,V(est_g)$core>4)
core5
core_names <- V(core5)$name
dim(m110)
dim(m111)
dim(m112)
m111[m111 == 0] <- -1
m111[is.na(m111)] <- 0
library(igraph)
est_g <- graph_from_incidence_matrix(m111)
V(est_g)$core <- coreness(est_g)
core5 <- induced_subgraph(est_g,V(est_g)$core>4)
#extract ids of the bills and orgs to keep
core_names <- V(core5)$name
core5
ibrary(igraph)
est_g <- graph_from_incidence_matrix(m111)
V(est_g)$core <- coreness(est_g)
core5 <- induced_subgraph(est_g,V(est_g)$core>3)
#extract ids of the bills and orgs to keep
core_names <- V(core5)$name
core5
